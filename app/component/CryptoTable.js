import Image from 'next/image';
import { useState } from 'react';
import image1 from './image/image1 (2).png';
import image10 from './image/image10.png';
import image2 from './image/image2 (2).png';
import image3 from './image/image3 (2).png';
import image4 from './image/image4 (2).png';
import image5 from './image/image5 (2).png';
import image6 from './image/image6.png';
import image7 from './image/image7 (2).png';
import image8 from './image/image8 (2).png';
import image9 from './image/image9 (2).png';

const coinImages = [image1, image2, image3, image4, image5, image6, image7, image8, image9, image10];

// Sample data for different tabs
const popularData = [
  { rank: '01', name: 'Bitcoin (BTC)', lastPrice: '$15,948.80', change: '-1.87%', marketCap: '$319,240,000,000', changePositive: false },
  { rank: '02', name: 'Cardano (ADA)', lastPrice: '$15,948.80', change: '-1.87%', marketCap: '$319,240,000,000', changePositive: false },
  { rank: '03', name: 'Dogecoin (DOGE)', lastPrice: '$15,948.80', change: '+1.87%', marketCap: '$319,240,000,000', changePositive: true },
  { rank: '04', name: 'Binance USD (BUSD)', lastPrice: '$15,948.80', change: '-1.87%', marketCap: '$319,240,000,000', changePositive: false },
  { rank: '05', name: 'Bitcoin Cash (BCH)', lastPrice: '$15,948.80', change: '+1.87%', marketCap: '$319,240,000,000', changePositive: true },
  { rank: '06', name: 'Ethereum (ETH)', lastPrice: '$1,103.50', change: '+1.87%', marketCap: '$139,560,000,000', changePositive: true },
  { rank: '07', name: 'Tether (USDT)', lastPrice: '$0.9989', change: '-1.87%', marketCap: '$65,813,633,222', changePositive: false },
  { rank: '08', name: 'Polkadot (DOT)', lastPrice: '$15,948.80', change: '+1.87%', marketCap: '$319,240,000,000', changePositive: true },
  { rank: '09', name: 'USDC Coin (USDC)', lastPrice: '$15,948.80', change: '-1.87%', marketCap: '$319`319,240,000,000', changePositive: false },
  { rank: '10', name: 'Uniswap (UNI)', lastPrice: '$15,948.80', change: '+1.87%', marketCap: '$319,240,000,000', changePositive: true },
];

const recentlyAddedData = [
  { rank: '01', name: 'NewCoin1 (NC1)', lastPrice: '$0.50', change: '+5.20%', marketCap: '$50,000,000', changePositive: true },
  { rank: '02', name: 'NewCoin2 (NC2)', lastPrice: '$1.20', change: '-2.10%', marketCap: '$120,000,000', changePositive: false },
  { rank: '03', name: 'NewCoin3 (NC3)', lastPrice: '$0.75', change: '+3.45%', marketCap: '$75,000,000', changePositive: true },
];

const globalChartsData = [
  { rank: '01', name: 'GlobalCoin1 (GC1)', lastPrice: '$10,000.00', change: '+0.87%', marketCap: '$200,000,000,000', changePositive: true },
  { rank: '02', name: 'GlobalCoin2 (GC2)', lastPrice: '$2,500.00', change: '-1.23%', marketCap: '$80,000,000,000', changePositive: false },
  { rank: '03', name: 'GlobalCoin3 (GC3)', lastPrice: '$1.50', change: '+2.15%', marketCap: '$30,000,000,000', changePositive: true },
  { rank: '04', name: 'Binance USD (BUSD)', lastPrice: '$15,948.80', change: '-1.87%', marketCap: '$319,240,000,000', changePositive: false },
];

const CryptoTable = () => {
  const [activeTab, setActiveTab] = useState('POPULAR');

  // Determine which data to display based on active tab
  const getTableData = () => {
    switch (activeTab) {
      case 'RECENTLY ADDED':
        return recentlyAddedData;
      case 'GLOBAL CHARTS':
        return globalChartsData;
      case 'POPULAR':
      default:
        return popularData;
    }
  };

  const tableData = getTableData();

  return (
    <div className="bg-[#1A2C38] bodeinggaas text-amber-50">
      {/* Tabs */}
      <div className="buttonsflesxisnwa flex items-center mb-4 w-full gap-[16px] sm:gap-[20px] md:gap-[24px] lg:gap-[32px] xl:gap-[36px] 2xl:gap-[40px] p-[13px] sm:p-[14px] md:p-[15px] lg:p-[16px] xl:p-[20px] 2xl:p-[24px] border-b-[1px] border-[#03fc9e1f]">
  <button
    className={`peoexgols cursor-pointer transition-all duration-200 ${
      activeTab === 'POPULAR' ? '!text-[#EAF4FE]' : 'hover:text-[#EAF4FE]'
    }`}
    onClick={() => setActiveTab('POPULAR')}
  >
    POPULAR
  </button>
  <button
    className={`peoexgols cursor-pointer transition-all duration-200 ${
      activeTab === 'RECENTLY ADDED' ? '!text-[#EAF4FE]' : 'hover:text-[#EAF4FE]'
    }`}
    onClick={() => setActiveTab('RECENTLY ADDED')}
  >
    RECENTLY ADDED
  </button>
  <button
    className={`peoexgols cursor-pointer transition-all duration-200 ${
      activeTab === 'GLOBAL CHARTS' ? '!text-[#EAF4FE]' : 'hover:text-[#EAF4FE]'
    }`}
    onClick={() => setActiveTab('GLOBAL CHARTS')}
  >
    GLOBAL CHARTS
  </button>
  <button className="ml-auto peoexgolsss sm:flex items-center justify-items-start sm:justify-items-center gap-[2px] lg:gap-3 cursor-pointer hidden">
    VIEW MORE
    <svg
      className="w-[12px] sm:w-[13px] md:w-[14px] lg:w-[15px] xl:w-[16px] 2xl:w-[20px]"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M1.75 12C1.75 11.5858 2.08579 11.25 2.5 11.25L20.5007 11.25C20.9149 11.25 21.2507 11.5858 21.2507 12C21.2507 12.4142 20.9149 12.75 20.5007 12.75L2.5 12.75C2.08579 12.75 1.75 12.4142 1.75 12Z"
        fill="#03FC9E"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.0204 5.42388C16.3386 5.1587 16.8115 5.20168 17.0767 5.51988L21.8101 11.1998C22.1964 11.6634 22.1964 12.3367 21.8101 12.8003L17.0767 18.4802C16.8115 18.7984 16.3386 18.8414 16.0204 18.5762C15.7022 18.311 15.6592 17.8381 15.9244 17.5199L20.5244 12L15.9244 6.48018C15.6592 6.16198 15.7022 5.68906 16.0204 5.42388Z"
        fill="#03FC9E"
      />
    </svg>
  </button>
</div>
      <div className="overflow-x-auto">
        <table className="w-full text-left">
          <thead>
            <tr>
              <th className="p-3 sm:p-4 hidden sm:table-cell" scope="col">
                ALL
              </th>
              <th className="p-3 sm:p-4 hidden sm:table-cell" scope="col">
                #
              </th>
              <th className="p-3 sm:p-4" scope="col">
                Name
              </th>
              <th className="p-3 sm:p-4" scope="col">
                Last Price
              </th>
              <th className="p-3 sm:p-4 hidden sm:table-cell" scope="col">
                24h %
              </th>
              <th className="p-3 sm:p-4 hidden lg:table-cell" scope="col">
                Market Cap
              </th>
              <th className="p-3 sm:p-4 hidden xl:table-cell" scope="col">
                Last 7 Days
              </th>
              <th className="p-3 sm:p-4 hidden md:table-cell" scope="col">
                Actions
              </th>
            </tr>
          </thead>
          <tbody>
            {tableData.map((coin, index) => (
              <tr
                key={index}
                className="border-t-[1px] border-[#03fc9d0e] group"
              >
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] hidden sm:table-cell">
                  <span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className={`w-[12px] sm:w-[13px] md:w-[14px] lg:w-[15px] xl:w-[16px] 2xl:w-[20px] transition-colors duration-200 ${
                        index === 2
                          ? 'fill-yellow-400 fill-opacity-100'
                          : 'fill-white fill-opacity-70 group-hover:fill-yellow-400 group-hover:fill-opacity-100'
                      }`}
                      viewBox="0 0 19 18"
                      fill="none"
                    >
                      <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        d="M7.74395 0.920061C8.25419 -0.30669 9.99201 -0.306685 10.5022 0.920063L12.2231 5.05749C12.2538 5.13137 12.3233 5.18185 12.4031 5.18825L16.8698 5.54634C18.1942 5.65251 18.7312 7.30528 17.7221 8.16963L14.319 11.0848C14.2582 11.1369 14.2317 11.2185 14.2502 11.2964L15.29 15.6551C15.5982 16.9475 14.1923 17.9689 13.0584 17.2764L9.23433 14.9406C9.16604 14.8989 9.08016 14.8989 9.01187 14.9406L5.18775 17.2764C4.0539 17.9689 2.64797 16.9475 2.95625 15.6551L3.99597 11.2964C4.01453 11.2185 3.988 11.1369 3.92723 11.0848L0.524071 8.16963C-0.484968 7.30528 0.0520553 5.65251 1.37643 5.54634L5.84313 5.18825C5.92289 5.18185 5.99237 5.13137 6.0231 5.05749L7.74395 0.920061ZM9.32012 1.41174C9.24723 1.23648 8.99897 1.23649 8.92608 1.41174L7.20523 5.54916C6.99013 6.06633 6.50377 6.41969 5.94544 6.46445L1.47874 6.82254C1.28954 6.83771 1.21283 7.07382 1.35698 7.1973L4.76013 10.1125C5.18552 10.4768 5.37129 11.0486 5.24133 11.5934L4.20161 15.9522C4.15757 16.1368 4.35842 16.2827 4.52039 16.1838L8.34451 13.848C8.82251 13.5561 9.42369 13.5561 9.90169 13.848L13.7258 16.1838C13.8878 16.2827 14.0886 16.1368 14.0446 15.9522L13.0049 11.5934C12.8749 11.0486 13.0607 10.4768 13.4861 10.1125L16.8892 7.1973C17.0334 7.07382 16.9567 6.83771 16.7675 6.82254L12.3008 6.46445C11.7424 6.41969 11.2561 6.06633 11.041 5.54916L9.32012 1.41174Z"
                      />
                    </svg>
                  </span>
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] hidden sm:table-cell">
                  {coin.rank}
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] flex items-center gap-[5px] lg:gap-[8px]">
                  <Image
                    src={coinImages[index % coinImages.length]} // Fallback for when index exceeds image array length
                    alt={`${coin.name} icon`}
                    className="w-[16px] sm:w-[20px] md:w-[24px] lg:w-[32px] xl:w-[36px] 2xl:w-[40px]"
                  />
                  {coin.name}
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px]">
                  {coin.lastPrice}
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] hidden sm:table-cell">
                  <span
                    className={
                      coin.changePositive ? 'change-positive' : 'change-negative'
                    }
                  >
                    {coin.change}
                  </span>
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] lg:table-cell hidden">
                  {coin.marketCap}
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] xl:table-cell hidden">
                  {coin.changePositive ? (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="96"
                      height="27.4"
                      viewBox="0 0 133 38"
                      fill="none"
                      preserveAspectRatio="xMidYMid meet"
                    >
                      <path
                        d="M2.08305 19.1188L1.16795 20.4915C1.05844 20.6557 1 20.8487 1 21.0462V36.5519C1 37.1042 1.44771 37.5519 2 37.5519H131C131.552 37.5519 132 37.1042 132 36.5519V3.81017C132 2.92515 130.868 2.55694 130.347 3.27268C130.073 3.64955 129.559 3.75981 129.155 3.52862L128.792 3.32161C128.343 3.06463 127.771 3.19358 127.475 3.61879L124.028 8.57514C123.841 8.84386 123.534 9.00407 123.207 9.00407H121.194C120.79 9.00407 120.426 8.76133 120.271 8.38869L120.018 7.78075C119.691 6.99687 118.598 6.95116 118.207 7.70505L116.287 11.4081C115.926 12.1046 114.94 12.1329 114.539 11.4583L110.975 5.45479C110.667 4.93731 109.97 4.81753 109.508 5.20281C109.105 5.53807 108.51 5.49688 108.158 5.10937L107.09 3.9348C106.621 3.41832 105.78 3.52958 105.461 4.1504L96.7343 21.1319C96.4851 21.6169 95.8507 21.7459 95.4318 21.3969C95.0236 21.0566 94.4069 21.1694 94.1454 21.632L92.1237 25.2088C91.7258 25.9129 90.7 25.8778 90.351 25.1482L88.7273 21.7532C88.4699 21.2148 87.8012 21.0203 87.2952 21.3366L87.0862 21.4672C86.5707 21.7894 85.8893 21.5809 85.6424 21.0254L78.4235 4.7829C78.0819 4.01423 77.0017 3.98512 76.6191 4.73426L71.8347 14.1038C71.5146 14.7307 70.6643 14.8395 70.1967 14.3134L69.7706 13.8341C69.3769 13.3912 68.6865 13.3859 68.286 13.8227L63.4622 19.0851C63.2728 19.2917 63.0054 19.4094 62.7251 19.4094H60.875C60.6314 19.4094 60.3961 19.4983 60.2134 19.6595L56.5793 22.8661C56.2204 23.1828 55.6874 23.2007 55.308 22.9089L53.7766 21.7309C53.1871 21.2774 52.3264 21.6033 52.1851 22.3335L51.5952 25.3812C51.4012 26.3834 50.0068 26.485 49.6696 25.5215L47.502 19.3283C47.3139 18.7908 46.7155 18.5187 46.1867 18.7302L45.2651 19.0989C44.8157 19.2786 44.3022 19.1108 44.0457 18.7004L43.6752 18.1077C43.3863 17.6453 42.7802 17.4997 42.3127 17.7802L41.3122 18.3805C40.8513 18.657 40.2543 18.5198 39.9604 18.0698L33.118 7.59235C32.6542 6.8821 31.5723 7.03565 31.3244 7.84692L29.2305 14.6995C29.102 15.1201 28.7139 15.4073 28.2742 15.4073H27.2656C26.869 15.4073 26.5099 15.6416 26.3502 16.0046L23.7684 21.8724C23.709 22.0074 23.6205 22.1276 23.5092 22.2243L18.0467 26.9744C17.7411 27.2401 17.3055 27.2953 16.9433 27.1142L15.0849 26.185C14.946 26.1156 14.7929 26.0794 14.6377 26.0794H13.1123C12.7223 26.0794 12.3678 25.8526 12.2044 25.4985L11.1398 23.1919C10.9764 22.8378 10.6219 22.611 10.2319 22.611H9.16347C8.74662 22.611 8.3735 22.3524 8.22714 21.9621L7.2423 19.3359C7.04017 18.7969 6.42587 18.5394 5.89983 18.7732L4.93111 19.2037C4.64024 19.333 4.3052 19.3161 4.02883 19.1582L3.41124 18.8053C2.95491 18.5445 2.37459 18.6815 2.08305 19.1188Z"
                        fill="url(#paint0_linear_214_529)"
                        fillOpacity="0.1"
                      />
                      <path
                        d="M1 20.7434L2.08305 19.1188C2.37459 18.6815 2.95491 18.5445 3.41124 18.8053L4.02883 19.1582C4.3052 19.3161 4.64024 19.333 4.93111 19.2037L5.89983 18.7732C6.42587 18.5394 7.04017 18.7969 7.2423 19.3359L8.22714 21.9621C8.3735 22.3524 8.74662 22.611 9.16347 22.611H10.2319C10.6219 22.611 10.9764 22.8378 11.1398 23.1919L12.2044 25.4985C12.3678 25.8526 12.7223 26.0794 13.1123 26.0794H14.6377C14.7929 26.0794 14.946 26.1156 15.0849 26.185L16.9433 27.1142C17.3055 27.2953 17.7411 27.2401 18.0467 26.9744L23.5092 22.2243C23.6205 22.1276 23.709 22.0074 23.7684 21.8724L26.3502 16.0046C26.5099 15.6416 26.869 15.4073 27.2656 15.4073H28.2742C28.7139 15.4073 29.102 15.1201 29.2305 14.6996L31.3244 7.84692C31.5723 7.03565 32.6542 6.8821 33.118 7.59235L39.9604 18.0698C40.2543 18.5198 40.8513 18.657 41.3122 18.3805L42.3127 17.7802C42.7802 17.4997 43.3863 17.6453 43.6752 18.1077L44.0457 18.7004C44.3022 19.1108 44.8157 19.2786 45.2651 19.0989L46.1867 18.7302C46.7155 18.5187 47.3138 18.7908 47.502 19.3283L49.6696 25.5215C50.0068 26.485 51.4012 26.3834 51.5952 25.3812L52.1851 22.3335C52.3264 21.6033 53.1871 21.2774 53.7766 21.7309L55.308 22.9089C55.6874 23.2007 56.2204 23.1828 56.5793 22.8661L60.2134 19.6595C60.3961 19.4983 60.6314 19.4094 60.875 19.4094H62.7251C63.0054 19.4094 63.2728 19.2917 63.4622 19.0851L68.286 13.8227C68.6865 13.3859 69.3769 13.3912 69.7706 13.8341L70.1967 14.3134C70.6643 14.8395 71.5146 14.7307 71.8347 14.1038L76.6191 4.73426C77.0017 3.98512 78.0819 4.01423 78.4235 4.7829L85.6424 21.0254C85.8893 21.5809 86.5707 21.7894 87.0862 21.4672L87.2952 21.3366C87.8012 21.0204 88.4699 21.2148 88.7273 21.7532L90.351 25.1482C90.7 25.8778 91.7258 25.9129 92.1237 25.2088L94.1454 21.632C94.4069 21.1694 95.0236 21.0567 95.4318 21.3969V21.3969C95.8507 21.7459 96.4851 21.6169 96.7343 21.1319L105.461 4.1504C105.78 3.52958 106.621 3.41832 107.09 3.9348L108.158 5.10937C108.51 5.49688 109.105 5.53807 109.508 5.20281V5.20281C109.97 4.81753 110.667 4.93731 110.975 5.4548L114.539 11.4583C114.94 12.1329 115.926 12.1046 116.287 11.4081L118.207 7.70505C118.598 6.95117 119.691 6.99687 120.018 7.78075L120.271 8.38869C120.426 8.76134 120.79 9.00407 121.194 9.00407H123.207C123.534 9.00407 123.841 8.84386 124.028 8.57514L127.475 3.61879C127.771 3.19358 128.343 3.06463 128.792 3.32161L129.088 3.49031C129.53 3.74331 130.093 3.62264 130.393 3.21024L132 1"
                        stroke="#03FC9E"
                      />
                      <defs>
                        <linearGradient
                          id="paint0_linear_214_529"
                          x1="66.5"
                          y1="1"
                          x2="66.5"
                          y2="37.5519"
                          gradientUnits="userSpaceOnUse"
                        >
                          <stop stopColor="#0CE93C" />
                          <stop offset="1" stopColor="#0CE93C" stopOpacity="0" />
                        </linearGradient>
                      </defs>
                    </svg>
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="96"
                      height="26.7"
                      viewBox="0 0 133 37"
                      fill="none"
                      preserveAspectRatio="xMidYMid meet"
                    >
                      <path
                        d="M4.11101 7.82789L3.49655 8.44235C3.16845 8.77045 2.62364 8.72275 2.35756 8.34262C1.93916 7.74492 1 8.04096 1 8.77055V35.4134C1 35.9657 1.44771 36.4134 2 36.4134H130.927C131.507 36.4134 131.965 35.9216 131.924 35.343L131.216 25.3182C131.205 25.1612 131.157 25.0091 131.076 24.8742L130.246 23.4905C129.941 22.981 129.213 22.9519 128.867 23.4355C128.559 23.8671 127.929 23.8999 127.578 23.5026L122.931 18.2497C122.515 17.7791 121.773 17.8045 121.39 18.3026L120.388 19.6045C119.95 20.1746 119.071 20.1091 118.721 19.4804L116.366 15.2416C115.978 14.5432 114.968 14.5594 114.603 15.2699L111.309 21.6751C111.007 22.2621 110.195 22.3306 109.799 21.8026C109.433 21.3146 108.696 21.3286 108.349 21.8302L107.609 22.8988C107.178 23.5218 106.238 23.4575 105.895 22.7816L96.9982 5.22204C96.7511 4.73421 96.1145 4.60282 95.6944 4.95292C95.2876 5.29186 94.6734 5.18108 94.4108 4.72139L92.6399 1.62233C92.2436 0.928865 91.2344 0.956878 90.8772 1.67125L89.1317 5.16231C88.8264 5.77281 88.0128 5.90484 87.5301 5.4222L87.5102 5.40225C87.0626 4.9547 86.3171 5.03027 85.9685 5.55852L78.5291 16.8304C78.1756 17.3659 77.4164 17.4347 76.9725 16.9714L72.4094 12.21C72.0215 11.8053 71.3767 11.7984 70.9803 12.1948L70.2604 12.9147C69.8758 13.2994 69.2542 13.306 68.8614 12.9296L63.4551 7.74848C63.2689 7.57007 63.021 7.47047 62.7632 7.47047H60.3776C60.1123 7.47047 59.858 7.36511 59.6704 7.17758L56.849 4.3561C56.4938 4.00093 55.9303 3.96433 55.5322 4.27058L53.7403 5.64891C53.2356 6.03713 52.5015 5.86109 52.2277 5.28622L51.104 2.92641C50.7247 2.12977 49.5747 2.17905 49.2648 3.00522L47.4353 7.88396C47.1799 8.56494 46.3061 8.75422 45.7919 8.23995L45.5192 7.96726C45.1073 7.55536 44.4319 7.5813 44.0528 8.02357L43.7753 8.34732C43.4279 8.75261 42.8235 8.8136 42.4021 8.48588L41.6612 7.90963C41.1817 7.53668 40.4832 7.67389 40.1804 8.20051L35.4483 16.4303C35.0719 17.0849 34.1336 17.1021 33.7334 16.4618L30.9088 11.9425C30.7261 11.6501 30.4056 11.4725 30.0608 11.4725H27.8237C27.4148 11.4725 27.0471 11.2236 26.8952 10.8439L26.3309 9.43309C26.179 9.05343 25.8113 8.80448 25.4024 8.80448H22.2246C21.8138 8.80448 21.4448 8.55323 21.2942 8.17101L18.8309 1.91789C18.5248 1.14089 17.4575 1.05919 17.0367 1.78055L14.8225 5.57634C14.5528 6.03875 13.9667 6.20672 13.493 5.95739L10.2529 4.25211C9.72788 3.97576 9.07907 4.21474 8.85871 4.76564L7.62997 7.83751C7.38288 8.45523 6.61271 8.66393 6.08755 8.25547L5.43206 7.74564C5.03397 7.43602 4.46762 7.47128 4.11101 7.82789Z"
                        fill="url(#paint0_linear_214_403)"
                        fillOpacity="0.1"
                      />
                      <path
                        d="M1 6.40326L2.18409 8.09482C2.54067 8.60422 3.27075 8.66815 3.71043 8.22847L4.11101 7.82789C4.46762 7.47128 5.03397 7.43602 5.43206 7.74564L6.08755 8.25547C6.61271 8.66393 7.38288 8.45523 7.62997 7.83751L8.85871 4.76564C9.07908 4.21473 9.72788 3.97576 10.2529 4.25211L13.493 5.95739C13.9667 6.20672 14.5528 6.03875 14.8225 5.57634L17.0367 1.78055C17.4575 1.05919 18.5248 1.14089 18.8309 1.91789L21.2942 8.17101C21.4448 8.55323 21.8138 8.80448 22.2246 8.80448H25.4024C25.8113 8.80448 26.179 9.05343 26.3309 9.43309L26.8952 10.8439C27.0471 11.2236 27.4148 11.4725 27.8237 11.4725H30.0608C30.4056 11.4725 30.7261 11.6501 30.9088 11.9425L33.7334 16.4618C34.1336 17.1021 35.0719 17.0849 35.4483 16.4303L40.1804 8.20051C40.4832 7.67389 41.1817 7.53668 41.6612 7.90963L42.4021 8.48588C42.8235 8.8136 43.4279 8.75261 43.7753 8.34732L44.0528 8.02357C44.4319 7.5813 45.1073 7.55536 45.5192 7.96726L45.7919 8.23995C46.3061 8.75422 47.1799 8.56494 47.4353 7.88396L49.2648 3.00522C49.5747 2.17905 50.7247 2.12977 51.104 2.92641L52.2278 5.28622C52.5015 5.86109 53.2356 6.03713 53.7403 5.64891L55.5322 4.27058C55.9303 3.96433 56.4938 4.00093 56.849 4.3561L59.6704 7.17758C59.858 7.36511 60.1123 7.47047 60.3776 7.47047H62.7632C63.021 7.47047 63.2689 7.57007 63.4551 7.74848L68.8614 12.9296C69.2542 13.306 69.8758 13.2994 70.2604 12.9147L70.9803 12.1948C71.3767 11.7984 72.0215 11.8053 72.4094 12.21L76.9725 16.9714C77.4164 17.4347 78.1756 17.3659 78.5291 16.8304L85.9685 5.55852C86.3171 5.03027 87.0626 4.9547 87.5102 5.40226L87.5301 5.4222C88.0128 5.90484 88.8264 5.77281 89.1317 5.16231L90.8772 1.67125C91.2344 0.956879 92.2436 0.928866 92.6399 1.62233L94.4108 4.72139C94.6734 5.18108 95.2876 5.29186 95.6944 4.95292V4.95292C96.1145 4.60282 96.7511 4.73421 96.9982 5.22204L105.895 22.7816C106.238 23.4575 107.178 23.5218 107.609 22.8988L108.349 21.8302C108.696 21.3286 109.433 21.3146 109.799 21.8026V21.8026C110.195 22.3306 111.007 22.2621 111.309 21.6751L114.603 15.2699C114.968 14.5594 115.978 14.5432 116.366 15.2416L118.721 19.4804C119.071 20.1091 119.95 20.1746 120.388 19.6045L121.39 18.3026C121.773 17.8045 122.515 17.7791 122.931 18.2497L127.578 23.5026C127.929 23.8999 128.559 23.8671 128.867 23.4355V23.4355C129.213 22.9519 129.941 22.981 130.246 23.4905L131.2 25.0794L132 26.4134"
                        stroke="#FB4950"
                      />
                      <defs>
                        <linearGradient
                          id="paint0_linear_214_403"
                          x1="66.5"
                          y1="0"
                          x2="67"
                          y2="36"
                          gradientUnits="userSpaceOnUse"
                        >
                          <stop stopColor="#FB4950" />
                          <stop offset="1" stopColor="#FB4950" stopOpacity="0" />
                        </linearGradient>
                      </defs>
                    </svg>
                  )}
                </td>
                <td className="p-[12px] sm:p-[13px] md:p-[14px] lg:p-[15px] xl:p-[16px] 2xl:p-[20px] hidden md:table-cell">
                  <button
                    className={`px-[12px] sm:px-[13px] md:px-[14px] lg:px-[15px] xl:px-[16px] 2xl:px-[20px] py-[10px] sm:py-[11px] md:py-[12px] lg:py-[13px] xl:py-[14px] 2xl:py-[15px] cursor-pointer ${
                      index === 2
                        ? 'buttontwo'
                        : 'buttonone group-hover:text-[#000] group-hover:bg-[#03FC9E]'
                    }`}
                  >
                    Trade Now
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default CryptoTable;